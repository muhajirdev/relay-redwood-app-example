"""
Use to check whether or not a user is authenticated and is associated
with an optional set of roles.
"""
directive @requireAuth(roles: [String]) on FIELD_DEFINITION

"""Use to skip authentication checks and allow public access."""
directive @skipAuth on FIELD_DEFINITION

input CreateUserInput {
  city: String!
  country: String!
  email: String!
  name: String
  profileViews: Int!
}

scalar Date

scalar DateTime

scalar JSON

scalar JSONObject

type Mutation {
  createUser(input: CreateUserInput!): User!
  deleteUser(id: ID!): User!
  updateUser(id: ID!, input: UpdateUserInput!): User!
}

interface Node {
  id: ID!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
}

type Query {
  redwood: Redwood
  user(id: ID!): User
  users(after: String, before: String, first: Int, last: Int): UserConnection
}

type Redwood {
  currentUser: JSON
  prismaVersion: String
  version: String
}

scalar Time

input UpdateUserInput {
  city: String
  country: String
  email: String
  name: String
  profileViews: Int
}

type User implements Node {
  city: String!
  country: String!
  email: String!
  id: ID!
  name: String
  profileViews: Int!
}

type UserConnection {
  edges: [UserEdge]
  pageInfo: PageInfo!
}

type UserEdge {
  cursor: String!
  node: User!
}